#!/usr/bin/env python3
##
## EPITECH PROJECT, 2020
## 206
## File description:
## neutrinos
##

from sys import *
from math import *

def calc(value, array):
    total = array[1] * array[0]
    tmp = (array[3] * array[3] + array[1] * array[1]) * array[0]
    array[0] = array[0] + 1
    array[1] = (total + value) / array[0]
    array[3] = sqrt(((tmp + pow(value, 2)) / array[0]) - pow(array[1], 2))
    array[2] = array[0] / ((1 / value) + ((array[0] - 1) / array[2]))
    return (array)

def compute(responses):
    try:
        data = input("Enter next value: ")
    except EOFError:
        exit(0)
    if (data == "END"):
        exit(0)
    try:
        int(data)
    except ValueError:
        compute([responses[0], responses[1], responses[2], responses[3]])
    tmp = (responses[3] * responses[3] + responses[1] * responses[1]) * responses[0]
    responses = calc(int(data), responses)
    square = sqrt((tmp + pow(int(data), 2)) / responses[0])
    print("\tNumber of values: ", responses[0])
    print("\tStandard deviation: ", responses[3])
    print("\tArithmetic mean: ", responses[1])
    print("\tRoot mean square: ", square)
    print("\tHarmonic mean: ", responses[2])
    compute(responses)

def guide():
    print("USAGE")
    print("\t./201yams d1 d2 d3 d4 d5 c")
    print("\nDESCRIPTION\n")
    print("\td1\tvalue of the first die (0 if not thrown)")
    print("\td2\tvalue of the second die (0 if not thrown)")
    print("\td3\tvalue of the third die (0 if not thrown)")
    print("\td4\tvalue of the fourth die (0 if not thrown)")
    print("\td5\tvalue of the fifth die (0 if not thrown)")
    print("\tc\expected combination")

def try_args():
    for i in range(1, 5):
        try:
            int(argv[i])
        except ValueError:
            print("test")
            exit(84)
        if int(argv[i]) <= 0:
            exit(84)

def main():
    if len(argv) == 2 and argv[1] == '-h':
        guide()
        exit(0)
    if len(argv) != 5:
        print("Wrong amount of arguments.")
        exit(84)
    try_args()
    compute([int(argv[1]), int(argv[2]), int(argv[3]), int(argv[4])]) 

if __name__ == "__main__":
    main()