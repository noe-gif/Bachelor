#!/usr/bin/env python3
##
## EPITECH PROJECT, 2020
## 204
## File description:
## ducks
##

from sys import *
from math import *

def getAverage(arg, time):
    return arg * exp(-time) + (4 - 3 * arg) * exp(-2 * time) + (2 * arg - 4) * exp(-4 * time)

def getProbability(arg, p):

    result = 0
    for time in range(10 * 100):
        result += getAverage(arg, time / 100)
        if result >= p:
            return time / 100

def sumAverages(arg, time):
    result = sum(getAverage(arg, index / 100) for index in range(time * 100)) 
    return result

def calcResults(arg):
    p, r, t = 0, 0, 0
    while p < 99.9999:
        p += getAverage(arg, t) / 10
        r += (getAverage(arg, t) / 10) * t
        t += 0.001
    r /= 99.9999
    r += 1./60
    print("mean return time: %dm %02ds" % divmod(r * 60, 60))
    d = 0
    while t > 0:
        d += ((t - r) ** 2) * (getAverage(arg, t) / 10)
        t -= 0.001
    d /= 99.9999
    d = d ** 0.5
    printResults(arg, d)

def printResults(a, d):
    print("standard deviation: %.3f" % d)
    print("time after which 50%% of the ducks are back: %dm %02ds" % 
    divmod(getProbability(a, 50) * 60, 60))
    print("time after which 99%% of the ducks are back: %dm %02ds" %
    divmod(getProbability(a, 99) * 60, 60))
    print("percentage of ducks back after 1 minute: %.1f%%" %
    (sumAverages(a, 1) - 0.2))
    print("percentage of ducks back after 2 minutes: %.1f%%" %
    sumAverages(a, 2))

def guide():
    print("USAGE")
    print("\t./204ducks a")
    print("\nDESCRIPTION")
    print("\ta\t constant")

def main():
    if len(argv) == 2 and argv[1] == '-h':
        guide()
        exit(0)
    if len(argv) != 2:
        print("Wrong amount of arguments.")
        exit(84)
    if not 0 <= float(argv[1]) <= 2.5:
        return 84
    calcResults(float(argv[1]))
    exit(0)

if __name__ == "__main__":
    main()